# Серверный блок: основной публичный endpoint
server {
    # Слушаем внутри контейнера (Render передаёт внешний TLS на контейнер)
    listen 8080;
    server_name _;

    # Простая страница "живой"
    location = / {
        add_header Content-Type text/plain;
        return 200 "Render proxy alive!\n";
    }

    # Статическая имитация публичного сайта (опционально, чтобы Render AI видел обычную страницу)
    location /static/ {
        alias /rend/static/;
        autoindex off;
        access_log off;
        expires 1h;
    }

    # WebSocket bridge: внешний wss://.../render => проксируем на твой VPS как plain WS (http)
    location /render {
        proxy_pass http://backend1/render;           # <<-- HTTP, не HTTPS
        proxy_http_version 1.1;

        # Обязательные заголовки для WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Host — сохраняем host, который нужен на стороне VPS (оставь как у тебя требует remote)
        proxy_set_header Host rend-bhs5.onrender.com;

        # Пробрасываем оригинальный IP (если нужно на VPS)
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # SSL на уровне proxy_pass не используется (Render терминирует TLS)
        proxy_ssl_server_name off;
        proxy_ssl_verify off;

        # Таймауты — держим коннекшены открытыми
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 30s;

        # Buffers для больших фреймов (если потребуется)
        proxy_buffer_size 8k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;

        access_log /var/log/nginx/render_access.log;
        error_log /var/log/nginx/render_error.log info;
    }

    # Обработчик healthcheck/metrics (если хочешь)
    location /healthz {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # Логи и прочее
    access_log /var/log/nginx/access.log combined;
}
